{
  "name": "placeholder",
  "version": "1.0.0",
  "description": "eCommerce WebApp",
  "author": "Group4",
  "license": "UNLICENSED",
  "repository": "none",
  "scripts": {
    "package": "docker build . -t cbe-linux-amd64 --platform linux/amd64 && docker save -o cbe-linux-amd64.tar cbe-linux-amd64",
    "containerised": "npm run build && docker-compose up --build",
    "build": "npm run build-webapp && npm run build-admin && npm run build-moderation && npm run build-auth && npm run build-category && npm run build-message && npm run build-product",
    "build-webapp": "cd WebApp && npm run build",
    "build-admin": "cd AdminApp && npm run build",
    "build-moderation": "cd ModerationApp && npm run build",
    "build-auth": "cd AccountService && npm run build",
    "build-category": "cd CategoryService && npm run build",
    "build-message": "cd MessageService && npm run build",
    "build-product": "cd ProductService && npm run build",
    "start": "concurrently --kill-others \"npm run auth-start\" \"npm run category-start\" \"npm run message-start\" \"npm run product-start\" \"npm run webapp-start\" \"npm run adminapp-start\" \"npm run moderationapp-start\"",
    "webapp-start": "cd WebApp && npm run start",
    "adminapp-start": "cd AdminApp && npm run start",
    "moderationapp-start": "cd ModerationApp && npm run start",
    "auth-start": "cd AccountService && npm run start",
    "category-start": "cd CategoryService && npm run start",
    "message-start": "cd MessageService && npm run start",
    "product-start": "cd ProductService && npm run start",
    "dev": "concurrently --kill-others \"npm run auth\" \"npm run category\" \"npm run message\" \"npm run product\" \"npm run webapp\" \"npm run adminapp\" \"npm run moderationapp\"",
    "dockers-up": "npm run docker-up-accounts && npm run docker-up-category && npm run docker-up-product && npm run docker-up-message",
    "docker-up-accounts": "cd AccountService && docker-compose up -d", 
    "docker-up-category": "cd CategoryService && docker-compose up -d",
    "docker-up-product": "cd ProductService && docker-compose up -d",
    "docker-up-message": "cd MessageService && docker-compose up -d",
    "dockers-down": "npm run docker-down-accounts && npm run docker-down-category && npm run docker-down-product && npm run docker-down-message",
    "docker-down-accounts": "cd AccountService && docker-compose down", 
    "docker-down-category": "cd CategoryService && docker-compose down",
    "docker-down-product": "cd ProductService && docker-compose down",
    "docker-down-message": "cd MessageService && docker-compose down",
    "installs": "npm install && npm run install-accounts && npm run install-category && npm run install-message && npm run install-product && npm run install-webapp && npm run install-adminapp && npm run install-moderationapp",
    "install-accounts": "cd AccountService && npm install",
    "install-category": "cd CategoryService && npm install",
    "install-message": "cd MessageService && npm install",
    "install-product": "cd ProductService && npm install",
    "install-webapp": "cd WebApp && npm install",
    "install-adminapp": "cd AdminApp && npm install",
    "install-moderationapp": "cd ModerationApp && npm install",
    "cis": "npm ci && npm run ci-accounts && npm run ci-category && npm run ci-product && npm run ci-message && npm run ci-webapp && npm run ci-moderationapp && npm run ci-adminapp",
    "ci-accounts": "cd AccountService && npm ci",
    "ci-category": "cd CategoryService && npm ci",
    "ci-message": "cd MessageService && npm ci",
    "ci-product": "cd ProductService && npm ci",
    "ci-webapp": "cd WebApp && npm ci",
    "ci-moderationapp": "cd ModerationApp && npm ci",
    "ci-adminapp": "cd AdminApp && npm ci",
    "webapp": "cd WebApp && npm run dev",
    "adminapp": "cd AdminApp && npm run dev",
    "moderationapp": "cd ModerationApp && npm run dev",
    "auth": "cd AccountService && npm run dev",
    "category": "cd CategoryService && npm run dev",
    "message": "cd MessageService && npm run dev",
    "product": "cd ProductService && npm run dev",
    "lint": "next lint --fix",
    "lints": "npm run lint-accounts && npm run lint-category && npm run lint-message && npm run lint-product && npm run lint-webapp && npm run lint-moderationapp && npm run lint-adminapp",
    "lint-accounts": "cd AccountService && npm run lint",
    "lint-category": "cd CategoryService && npm run lint",
    "lint-message": "cd MessageService && npm run lint",
    "lint-product": "cd ProductService && npm run lint",
    "lint-webapp": "cd WebApp && npm run lint",
    "lint-moderationapp": "cd ModerationApp && npm run lint",
    "lint-adminapp": "cd AdminApp && npm run lint",
    "tests": "npm run test-auth && npm run test-category && npm run test-message && npm run test-product && npm run test-webapp && npm run test-moderationapp && npm run test-adminapp",
    "test:silent": "jest --runInBand --silent --forceExit",
    "test:watch": "jest --runInBand --watchAll --forceExit",
    "test-webapp": "cd WebApp && npm run test",
    "test-moderationapp": "cd ModerationApp && npm run test",
    "test-adminapp": "cd AdminApp && npm run test",
    "test-auth": "cd AccountService && npm run test",
    "test-category": "cd CategoryService && npm run test",
    "test-message": "cd MessageService && npm run test",
    "test-product": "cd ProductService && npm run test",
    "zip": "bestzip Project.Submission.zip tsconfig.json src/* sql/*"
  },
  "devDependencies": {
    "concurrently": "*"
  }
}
